name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch: # Allow manual triggering

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x, 18.x, 20.x, 22.x]
    
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build
        run: npm run build
      
      - name: Run tests
        run: npm test

  publish:
    needs: build
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master' # Only on main/master
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Fetch all history for checking tags
          
      - uses: actions/setup-node@v4
        with:
          node-version: lts/*
          registry-url: 'https://registry.npmjs.org'
      
      - name: Get version from package.json
        id: package_version
        run: |
          VERSION=$(node -p "require('./package.json').version")
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
          echo "Package version: $VERSION"
      
      - name: Check if version exists as a tag
        id: check_tag
        run: |
          if git show-ref --tags --quiet --verify -- "refs/tags/v${{ steps.package_version.outputs.VERSION }}"; then
            echo "Tag exists, skipping release"
            echo "TAG_EXISTS=true" >> $GITHUB_OUTPUT
          else
            echo "Tag doesn't exist, will create release"
            echo "TAG_EXISTS=false" >> $GITHUB_OUTPUT
          fi
      
      - name: Install dependencies
        if: steps.check_tag.outputs.TAG_EXISTS == 'false'
        run: npm ci
      
      - name: Build
        if: steps.check_tag.outputs.TAG_EXISTS == 'false'
        run: npm run build
      
      - name: Create GitHub Release
        if: steps.check_tag.outputs.TAG_EXISTS == 'false'
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ steps.package_version.outputs.VERSION }}
          name: Release v${{ steps.package_version.outputs.VERSION }}
          draft: false
          prerelease: false
          generate_release_notes: true
      
      - name: Publish to NPM
        if: steps.check_tag.outputs.TAG_EXISTS == 'false'
        run: npm publish --provenance
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      
      - name: Build package to upload to GitHub releases
        if: steps.check_tag.outputs.TAG_EXISTS == 'false'
        run: |
          npm pack --pack-destination=dist
          echo "Package built and saved to dist directory."
          mv dist/*.tgz mongoose-store.tgz
      
      - name: Upload package to GitHub releases
        if: steps.check_tag.outputs.TAG_EXISTS == 'false'
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ steps.package_version.outputs.VERSION }}
          files: mongoose-store.tgz
